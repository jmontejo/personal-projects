# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
  . /etc/bashrc
fi

export HISTSIZE=100000
export HISTCONTROL=ignoredups:erasedups  # no duplicate entries
export HISTSIZE=100000                   # big big history
export HISTFILESIZE=100000               # big big history
shopt -s histappend                      # append to history, don't overwrite it
PROMPT_COMMAND='history -a;'

export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'

#------ Machine dependent settings
case `hostname` in
  *jmontejo* | *local* ) #local
    export MANPATH=/opt/local/share/man:$MANPATH
    export PATH=/opt/local/libexec/gnubin/:$PATH
    export MYGIT="/projects"
    alias tex2png='tex2png.sh'
    alias log="python $MYGIT/scripts/logger/main_log.py"
    alias ls='ls -h -G --color=auto'
    alias allow="sudo $MYGIT/scripts/blockWebs.py -a"
    alias block="sudo $MYGIT/scripts/blockWebs.py -b"
    alias mountafs="sshfs jmontejo@lxplus.cern.ch:/afs /afs"
    alias umountafs="umount /afs "
    source /Users/JMontejo/Documents/root_5.34.26/bin/thisroot.sh
    #source /Users/JMontejo/Downloads/root/bin/thisroot.sh 
    if python -c "from socket import gethostname; print gethostname()" | grep -q cern; then
     if grep 127 /etc/hosts | grep -v localhost | grep -q "#"; then 
     echo "Logged at CERN, how about blocking websites?"; 
     fi;
    fi
    ;;
  *cern* | *lxplus* | *tbed* ) # ------- lxbatch needs cern
    export MYGIT="/afs/cern.ch/user/j/jmontejo/work/personal-projects"
	#add texlive styles
	export PATH=/afs/cern.ch/sw/XML/texlive/latest/bin/x86_64-linux:$PATH
    #export AtlasSetup=/afs/cern.ch/atlas/software/dist/AtlasSetup
    #alias asetup='source $AtlasSetup/scripts/asetup.sh'
    #source /afs/cern.ch/atlas/offline/external/GRID/DA/panda-client/latest/etc/panda/panda_setup.sh
    #export PATHENA_GRID_SETUP_SH=/afs/cern.ch/project/gd/LCG-share/current/etc/profile.d/grid_env.sh
    alias ls='ls -h -G --color=auto'
    
    if tty --quiet ; then
       stty erase '^?'
    fi
    ;;
esac

#------ Machine independent settings
#exports
export SVNROOT=svn+ssh://svn.cern.ch/reps/atlasoff
export SVN_EDITOR=/usr/bin/vim
export EDITOR=/usr/bin/vim
export PATH=$PATH:$HOME/bin:.
export PYTHONPATH=$PYTHONPATH:$MYGIT/scripts
export GZIP=-9

#login alias
alias nifae='ssh -Y jmontejo@nifaets1.cern.ch'
alias caronte='ssh -Y jmontejo@caronte.ifae.es'
alias atropos='ssh -t jmontejo@caronte.ifae.es ssh jmontejo@atropos.ifae.es'
alias ui='ssh -Y jmontejo@ui.pic.es'
alias at3='ssh -Y jmontejo@at3.pic.es'
alias at301='ssh -Y jmontejo@at301.pic.es'
alias at302='ssh -Y jmontejo@at302.pic.es'
alias at303='ssh -Y jmontejo@at303.pic.es'
alias at304='ssh -Y jmontejo@at304.pic.es'
alias at305='ssh -Y jmontejo@at305.pic.es'
alias at306='ssh -Y jmontejo@at306.pic.es'
alias at307='ssh -Y jmontejo@at307.pic.es'
alias lxplus='LANG=C ssh -Y jmontejo@lxplus.cern.ch'
alias lxscreen='ssh -Y jmontejo@lxplus007.cern.ch'
alias atlasgw='ssh -Y jmontejo@atlasgw.cern.ch'
alias nifae06='ssh -Y jmontejo@nifae06.cern.ch'
alias testbed='ssh -Y jmontejo@pc-tbed-pub.cern.ch'

#useful alias
alias pythno='python'
alias root='root -l'
alias mv='mv -i'
alias convert='convert -density 300 -quality 100'
alias emacs='emacs -nw'
alias cdb='cd `pwd -P`/..'
alias lsd='ls -d -- */'
alias valgrind='valgrind --suppressions=$ROOTSYS/etc/valgrind-root.supp'
alias work='source $MYGIT/scripts/mystart.sh'
#the empty space at the end is needed
alias ami='arg="$@" ; if  ! which localSetupPyAMI &> /dev/null ; then setupATLAS; echo "Alias are now set, try again"; else unalias ami; localSetupPyAMI ; ami $arg ; fi; '
#alias rucio='arg="$@" ; if  ! which localSetupRucioClients &> /dev/null ; then setupATLAS; echo "Alias are now set, try again"; else unalias rucio; localSetupRucioClients ; rucio $arg ; fi; '
function lstail () { ls -lrt --color=always "$@" | tail; }
alias cd...='cd ../../..'
alias cd....='cd ../../../..'
alias cd.....='cd ../../../../..'
alias cd......='cd ../../../../../..'
alias triggerAPI='source $MYGIT/scripts/triggerAPI.sh'

#my new commands
alias comparePath='python $MYGIT/scripts/comparePath.py'
alias compareTree='python $MYGIT/scripts/compareTree.py'
alias hack='python $MYGIT/scripts/hack.py'
alias pdfize='python $MYGIT/scripts/pdfize.py'
alias webize='python $MYGIT/scripts/createHtmlOverview.py'
alias rename='set -f; reset_expansion python $MYGIT/scripts/renamer/rename.py'
my_wiki(){
  dig +short txt $1.wp.dg.cx
}
alias wiki='my_wiki'
getlast() {
  fc -ln "$1" "$1" | sed '1s/^[[:space:]]*//'
}

#overwrite builtin commands
reset_expansion(){
   trap "set +f; exit" INT TERM EXIT
  #CMD="$1"; shift; ARG="$@";
  #$CMD $ARG; set +f
  ARG="$@";
  $ARG; set +f
  trap - INT TERM EXIT
}
my_vim(){
  python $MYGIT/scripts/hack.py --vim "$@" && \vim $@
}
my_make(){
  python $MYGIT/scripts/hack.py --make "$@" && \make $@
}
my_display(){
case `hostname` in
  *pic*) # ------- pic
    cmd=\display
    ;;
  *lxplus* | *tbed* ) # ------- lxplus
    cmd=\display
    ;;
  *) # ------- local
    cmd=open
    ;;
esac
for i in $@; do if [ ! -f $i ]; then echo "File doesn't exist:" $i; else $cmd $i & fi; done
}

my_redo(){
  if [ $# -lt 2 ]; then
    echo Usage: redo old new
    return
  fi
  fc -s $1=$2
  #!!:gs/$1/$2 
  #`getlast | sed s/$1/$2/g`
}
alias vim='my_vim'
alias make='my_make'
alias display='my_display '
alias rm='set -f; reset_expansion python $MYGIT/scripts/my_rm.py'
alias mypwd='python $MYGIT/scripts/my_pwd.py'
alias cp='python $MYGIT/scripts/my_cp.py'
alias dccp='$MYGIT/scripts/my_dccp.py'
alias redo='my_redo '
my_chain(){
	cmd='root -l $MYGIT/scripts/chain.cxx('$#
	for i in $@; do
		#cmd=$cmd','$i
		cmd=$cmd',"'$i'"'
	done
	cmd=$cmd')'
	$cmd
}
alias chain='my_chain '

